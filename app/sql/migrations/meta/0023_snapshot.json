{
  "id": "6132c087-8427-4312-9061-05ffa42a0782",
  "prevId": "c31c3547-91c9-404d-8a4e-e49de442c69e",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.commission": {
      "name": "commission",
      "schema": "",
      "columns": {
        "commission_id": {
          "name": "commission_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "commission_commission_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "commission_category",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "tags": {
          "name": "tags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "images": {
          "name": "images",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "price_start": {
          "name": "price_start",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "price_options": {
          "name": "price_options",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "turnaround_days": {
          "name": "turnaround_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "revision_count": {
          "name": "revision_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 3
        },
        "base_size": {
          "name": "base_size",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'3000x3000'"
        },
        "status": {
          "name": "status",
          "type": "commission_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending_approval'"
        },
        "likes_count": {
          "name": "likes_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "order_count": {
          "name": "order_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "views_count": {
          "name": "views_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "is_featured_weekly": {
          "name": "is_featured_weekly",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "approved_by": {
          "name": "approved_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "approved_at": {
          "name": "approved_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "rejection_reason": {
          "name": "rejection_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "commission_profile_id_profiles_profile_id_fk": {
          "name": "commission_profile_id_profiles_profile_id_fk",
          "tableFrom": "commission",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "commission_approved_by_profiles_profile_id_fk": {
          "name": "commission_approved_by_profiles_profile_id_fk",
          "tableFrom": "commission",
          "tableTo": "profiles",
          "columnsFrom": [
            "approved_by"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "commission-select-policy": {
          "name": "commission-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "commission-select-policy-auth": {
          "name": "commission-select-policy-auth",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "commission-insert-policy": {
          "name": "commission-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "commission-update-policy": {
          "name": "commission-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid OR EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )",
          "withCheck": "profile_id = auth.uid()::uuid OR EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )"
        },
        "commission-counter-update-policy": {
          "name": "commission-counter-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "commission-delete-policy": {
          "name": "commission-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.commission_images": {
      "name": "commission_images",
      "schema": "",
      "columns": {
        "image_id": {
          "name": "image_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "commission_images_image_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "commission_id": {
          "name": "commission_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "image_url": {
          "name": "image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "display_order": {
          "name": "display_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "commission_images_commission_id_commission_commission_id_fk": {
          "name": "commission_images_commission_id_commission_commission_id_fk",
          "tableFrom": "commission_images",
          "tableTo": "commission",
          "columnsFrom": [
            "commission_id"
          ],
          "columnsTo": [
            "commission_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "commission-images-select-policy": {
          "name": "commission-images-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "commission-images-select-policy-auth": {
          "name": "commission-images-select-policy-auth",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "commission-images-insert-policy": {
          "name": "commission-images-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM commission c \n        WHERE c.commission_id = commission_images.commission_id \n        AND c.profile_id = auth.uid()::uuid\n      )"
        },
        "commission-images-update-policy": {
          "name": "commission-images-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM commission c \n        WHERE c.commission_id = commission_images.commission_id \n        AND c.profile_id = auth.uid()::uuid\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM commission c \n        WHERE c.commission_id = commission_images.commission_id \n        AND c.profile_id = auth.uid()::uuid\n      )"
        },
        "commission-images-delete-policy": {
          "name": "commission-images-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM commission c \n        WHERE c.commission_id = commission_images.commission_id \n        AND c.profile_id = auth.uid()::uuid\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.commission_likes": {
      "name": "commission_likes",
      "schema": "",
      "columns": {
        "like_id": {
          "name": "like_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "commission_likes_like_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "commission_id": {
          "name": "commission_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "liker_id": {
          "name": "liker_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "commission_likes_commission_id_commission_commission_id_fk": {
          "name": "commission_likes_commission_id_commission_commission_id_fk",
          "tableFrom": "commission_likes",
          "tableTo": "commission",
          "columnsFrom": [
            "commission_id"
          ],
          "columnsTo": [
            "commission_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "commission_likes_liker_id_profiles_profile_id_fk": {
          "name": "commission_likes_liker_id_profiles_profile_id_fk",
          "tableFrom": "commission_likes",
          "tableTo": "profiles",
          "columnsFrom": [
            "liker_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "commission_likes_commission_id_liker_id_unique": {
          "name": "commission_likes_commission_id_liker_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "commission_id",
            "liker_id"
          ]
        }
      },
      "policies": {
        "commission-likes-select-policy-anon": {
          "name": "commission-likes-select-policy-anon",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "commission-likes-select-policy-auth": {
          "name": "commission-likes-select-policy-auth",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "commission-likes-insert-policy": {
          "name": "commission-likes-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "liker_id = auth.uid()::uuid"
        },
        "commission-likes-delete-policy": {
          "name": "commission-likes-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "liker_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.commission_order": {
      "name": "commission_order",
      "schema": "",
      "columns": {
        "order_id": {
          "name": "order_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "commission_order_order_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "commission_id": {
          "name": "commission_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "selected_options": {
          "name": "selected_options",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "total_price": {
          "name": "total_price",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "requirements": {
          "name": "requirements",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "deadline": {
          "name": "deadline",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "revision_count_used": {
          "name": "revision_count_used",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "final_image_url": {
          "name": "final_image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "order_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "accepted_at": {
          "name": "accepted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "commission_order_commission_id_commission_commission_id_fk": {
          "name": "commission_order_commission_id_commission_commission_id_fk",
          "tableFrom": "commission_order",
          "tableTo": "commission",
          "columnsFrom": [
            "commission_id"
          ],
          "columnsTo": [
            "commission_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "commission_order_client_id_profiles_profile_id_fk": {
          "name": "commission_order_client_id_profiles_profile_id_fk",
          "tableFrom": "commission_order",
          "tableTo": "profiles",
          "columnsFrom": [
            "client_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "commission_order_profile_id_profiles_profile_id_fk": {
          "name": "commission_order_profile_id_profiles_profile_id_fk",
          "tableFrom": "commission_order",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "commission-order-select-policy": {
          "name": "commission-order-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "client_id = auth.uid()::uuid OR profile_id = auth.uid()::uuid"
        },
        "commission-order-insert-policy": {
          "name": "commission-order-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "client_id = auth.uid()::uuid"
        },
        "commission-order-update-policy": {
          "name": "commission-order-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "client_id = auth.uid()::uuid OR profile_id = auth.uid()::uuid",
          "withCheck": "client_id = auth.uid()::uuid OR profile_id = auth.uid()::uuid"
        },
        "commission-order-delete-policy": {
          "name": "commission-order-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "client_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.post_replies": {
      "name": "post_replies",
      "schema": "",
      "columns": {
        "post_reply_id": {
          "name": "post_reply_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "post_replies_post_reply_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "post_id": {
          "name": "post_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "parent_id": {
          "name": "parent_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "reply": {
          "name": "reply",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "upvotes_count": {
          "name": "upvotes_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "replies_count": {
          "name": "replies_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "post_replies_post_id_posts_post_id_fk": {
          "name": "post_replies_post_id_posts_post_id_fk",
          "tableFrom": "post_replies",
          "tableTo": "posts",
          "columnsFrom": [
            "post_id"
          ],
          "columnsTo": [
            "post_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "post_replies_parent_id_post_replies_post_reply_id_fk": {
          "name": "post_replies_parent_id_post_replies_post_reply_id_fk",
          "tableFrom": "post_replies",
          "tableTo": "post_replies",
          "columnsFrom": [
            "parent_id"
          ],
          "columnsTo": [
            "post_reply_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "post_replies_profile_id_profiles_profile_id_fk": {
          "name": "post_replies_profile_id_profiles_profile_id_fk",
          "tableFrom": "post_replies",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "post-replies-select-policy": {
          "name": "post-replies-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "post-replies-insert-policy": {
          "name": "post-replies-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "auth.uid() IS NOT NULL"
        },
        "post-replies-update-policy": {
          "name": "post-replies-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid",
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "post-replies-delete-policy": {
          "name": "post-replies-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.post_reply_upvotes": {
      "name": "post_reply_upvotes",
      "schema": "",
      "columns": {
        "post_reply_id": {
          "name": "post_reply_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "post_reply_upvotes_post_reply_id_post_replies_post_reply_id_fk": {
          "name": "post_reply_upvotes_post_reply_id_post_replies_post_reply_id_fk",
          "tableFrom": "post_reply_upvotes",
          "tableTo": "post_replies",
          "columnsFrom": [
            "post_reply_id"
          ],
          "columnsTo": [
            "post_reply_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "post_reply_upvotes_profile_id_profiles_profile_id_fk": {
          "name": "post_reply_upvotes_profile_id_profiles_profile_id_fk",
          "tableFrom": "post_reply_upvotes",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "post_reply_upvotes_post_reply_id_profile_id_pk": {
          "name": "post_reply_upvotes_post_reply_id_profile_id_pk",
          "columns": [
            "post_reply_id",
            "profile_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "post-reply-upvotes-select-policy": {
          "name": "post-reply-upvotes-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "post-reply-upvotes-insert-policy": {
          "name": "post-reply-upvotes-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "post-reply-upvotes-delete-policy": {
          "name": "post-reply-upvotes-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.post_upvotes": {
      "name": "post_upvotes",
      "schema": "",
      "columns": {
        "post_id": {
          "name": "post_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "post_upvotes_post_id_posts_post_id_fk": {
          "name": "post_upvotes_post_id_posts_post_id_fk",
          "tableFrom": "post_upvotes",
          "tableTo": "posts",
          "columnsFrom": [
            "post_id"
          ],
          "columnsTo": [
            "post_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "post_upvotes_profile_id_profiles_profile_id_fk": {
          "name": "post_upvotes_profile_id_profiles_profile_id_fk",
          "tableFrom": "post_upvotes",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "post_upvotes_post_id_profile_id_pk": {
          "name": "post_upvotes_post_id_profile_id_pk",
          "columns": [
            "post_id",
            "profile_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "post-upvotes-select-policy": {
          "name": "post-upvotes-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "post-upvotes-insert-policy": {
          "name": "post-upvotes-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "post-upvotes-delete-policy": {
          "name": "post-upvotes-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.posts": {
      "name": "posts",
      "schema": "",
      "columns": {
        "post_id": {
          "name": "post_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "posts_post_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "upvotes_count": {
          "name": "upvotes_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "replies_count": {
          "name": "replies_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "topic_id": {
          "name": "topic_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "posts_topic_id_topics_topic_id_fk": {
          "name": "posts_topic_id_topics_topic_id_fk",
          "tableFrom": "posts",
          "tableTo": "topics",
          "columnsFrom": [
            "topic_id"
          ],
          "columnsTo": [
            "topic_id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "posts_profile_id_profiles_profile_id_fk": {
          "name": "posts_profile_id_profiles_profile_id_fk",
          "tableFrom": "posts",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "posts-select-policy": {
          "name": "posts-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "posts-insert-policy": {
          "name": "posts-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "auth.uid() IS NOT NULL"
        },
        "posts-update-policy": {
          "name": "posts-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid",
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "posts-delete-policy": {
          "name": "posts-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.topics": {
      "name": "topics",
      "schema": "",
      "columns": {
        "topic_id": {
          "name": "topic_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "topics_topic_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "post_count": {
          "name": "post_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "topics_slug_unique": {
          "name": "topics_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        }
      },
      "policies": {
        "topics-select-policy": {
          "name": "topics-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "topics-insert-policy": {
          "name": "topics-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )"
        },
        "topics-update-policy": {
          "name": "topics-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )"
        },
        "topics-delete-policy": {
          "name": "topics-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.review_comment_likes": {
      "name": "review_comment_likes",
      "schema": "",
      "columns": {
        "comment_id": {
          "name": "comment_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "review_comment_likes_comment_id_review_comments_comment_id_fk": {
          "name": "review_comment_likes_comment_id_review_comments_comment_id_fk",
          "tableFrom": "review_comment_likes",
          "tableTo": "review_comments",
          "columnsFrom": [
            "comment_id"
          ],
          "columnsTo": [
            "comment_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "review_comment_likes_profile_id_profiles_profile_id_fk": {
          "name": "review_comment_likes_profile_id_profiles_profile_id_fk",
          "tableFrom": "review_comment_likes",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "review_comment_likes_comment_id_profile_id_pk": {
          "name": "review_comment_likes_comment_id_profile_id_pk",
          "columns": [
            "comment_id",
            "profile_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "review-comment-likes-select-policy": {
          "name": "review-comment-likes-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "review-comment-likes-insert-policy": {
          "name": "review-comment-likes-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "review-comment-likes-delete-policy": {
          "name": "review-comment-likes-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.review_comments": {
      "name": "review_comments",
      "schema": "",
      "columns": {
        "comment_id": {
          "name": "comment_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "review_comments_comment_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "review_id": {
          "name": "review_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "parent_id": {
          "name": "parent_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "comment": {
          "name": "comment",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "likes_count": {
          "name": "likes_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "review_comments_review_id_reviews_review_id_fk": {
          "name": "review_comments_review_id_reviews_review_id_fk",
          "tableFrom": "review_comments",
          "tableTo": "reviews",
          "columnsFrom": [
            "review_id"
          ],
          "columnsTo": [
            "review_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "review_comments_parent_id_review_comments_comment_id_fk": {
          "name": "review_comments_parent_id_review_comments_comment_id_fk",
          "tableFrom": "review_comments",
          "tableTo": "review_comments",
          "columnsFrom": [
            "parent_id"
          ],
          "columnsTo": [
            "comment_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "review_comments_profile_id_profiles_profile_id_fk": {
          "name": "review_comments_profile_id_profiles_profile_id_fk",
          "tableFrom": "review_comments",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "review-comments-select-policy": {
          "name": "review-comments-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "review-comments-insert-policy": {
          "name": "review-comments-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "auth.uid() IS NOT NULL"
        },
        "review-comments-update-policy": {
          "name": "review-comments-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid",
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "review-comments-delete-policy": {
          "name": "review-comments-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid OR EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.review_likes": {
      "name": "review_likes",
      "schema": "",
      "columns": {
        "review_id": {
          "name": "review_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "review_likes_review_id_reviews_review_id_fk": {
          "name": "review_likes_review_id_reviews_review_id_fk",
          "tableFrom": "review_likes",
          "tableTo": "reviews",
          "columnsFrom": [
            "review_id"
          ],
          "columnsTo": [
            "review_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "review_likes_profile_id_profiles_profile_id_fk": {
          "name": "review_likes_profile_id_profiles_profile_id_fk",
          "tableFrom": "review_likes",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "review_likes_review_id_profile_id_pk": {
          "name": "review_likes_review_id_profile_id_pk",
          "columns": [
            "review_id",
            "profile_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "review-likes-select-policy": {
          "name": "review-likes-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "review-likes-insert-policy": {
          "name": "review-likes-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "review-likes-delete-policy": {
          "name": "review-likes-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.reviews": {
      "name": "reviews",
      "schema": "",
      "columns": {
        "review_id": {
          "name": "review_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "reviews_review_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "order_id": {
          "name": "order_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "commission_id": {
          "name": "commission_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "reviewer_id": {
          "name": "reviewer_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "image_url": {
          "name": "image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "likes_count": {
          "name": "likes_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "views_count": {
          "name": "views_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "is_featured": {
          "name": "is_featured",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "reviews_order_id_commission_order_order_id_fk": {
          "name": "reviews_order_id_commission_order_order_id_fk",
          "tableFrom": "reviews",
          "tableTo": "commission_order",
          "columnsFrom": [
            "order_id"
          ],
          "columnsTo": [
            "order_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reviews_commission_id_commission_commission_id_fk": {
          "name": "reviews_commission_id_commission_commission_id_fk",
          "tableFrom": "reviews",
          "tableTo": "commission",
          "columnsFrom": [
            "commission_id"
          ],
          "columnsTo": [
            "commission_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reviews_profile_id_profiles_profile_id_fk": {
          "name": "reviews_profile_id_profiles_profile_id_fk",
          "tableFrom": "reviews",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reviews_reviewer_id_profiles_profile_id_fk": {
          "name": "reviews_reviewer_id_profiles_profile_id_fk",
          "tableFrom": "reviews",
          "tableTo": "profiles",
          "columnsFrom": [
            "reviewer_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "reviews_order_id_unique": {
          "name": "reviews_order_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "order_id"
          ]
        }
      },
      "policies": {
        "reviews-select-policy": {
          "name": "reviews-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "reviews-insert-policy": {
          "name": "reviews-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "reviewer_id = auth.uid()::uuid AND EXISTS (\n        SELECT 1 FROM commission_order \n        WHERE order_id = reviews.order_id \n        AND client_id = auth.uid()::uuid \n        AND status = 'completed'\n      )"
        },
        "reviews-update-policy": {
          "name": "reviews-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "reviewer_id = auth.uid()::uuid",
          "withCheck": "reviewer_id = auth.uid()::uuid"
        },
        "reviews-delete-policy": {
          "name": "reviews-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "reviewer_id = auth.uid()::uuid OR EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.artist_portfolio": {
      "name": "artist_portfolio",
      "schema": "",
      "columns": {
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "images": {
          "name": "images",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "category": {
          "name": "category",
          "type": "commission_category",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "tags": {
          "name": "tags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "views_count": {
          "name": "views_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "artist_portfolio_profile_id_profiles_profile_id_fk": {
          "name": "artist_portfolio_profile_id_profiles_profile_id_fk",
          "tableFrom": "artist_portfolio",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "artist-portfolio-select-policy": {
          "name": "artist-portfolio-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "artist-portfolio-insert-policy": {
          "name": "artist-portfolio-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "artist-portfolio-update-policy": {
          "name": "artist-portfolio-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid",
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "artist-portfolio-delete-policy": {
          "name": "artist-portfolio-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.follows": {
      "name": "follows",
      "schema": "",
      "columns": {
        "follower_id": {
          "name": "follower_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "following_id": {
          "name": "following_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "follows_follower_id_profiles_profile_id_fk": {
          "name": "follows_follower_id_profiles_profile_id_fk",
          "tableFrom": "follows",
          "tableTo": "profiles",
          "columnsFrom": [
            "follower_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "follows_following_id_profiles_profile_id_fk": {
          "name": "follows_following_id_profiles_profile_id_fk",
          "tableFrom": "follows",
          "tableTo": "profiles",
          "columnsFrom": [
            "following_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "follows_follower_id_following_id_pk": {
          "name": "follows_follower_id_following_id_pk",
          "columns": [
            "follower_id",
            "following_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "follows-select-policy": {
          "name": "follows-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "follows-insert-policy": {
          "name": "follows-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "follower_id = auth.uid()::uuid"
        },
        "follows-delete-policy": {
          "name": "follows-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "follower_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.message_room_members": {
      "name": "message_room_members",
      "schema": "",
      "columns": {
        "message_room_id": {
          "name": "message_room_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "joined_at": {
          "name": "joined_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_read_at": {
          "name": "last_read_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "message_room_members_message_room_id_message_rooms_message_room_id_fk": {
          "name": "message_room_members_message_room_id_message_rooms_message_room_id_fk",
          "tableFrom": "message_room_members",
          "tableTo": "message_rooms",
          "columnsFrom": [
            "message_room_id"
          ],
          "columnsTo": [
            "message_room_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "message_room_members_profile_id_profiles_profile_id_fk": {
          "name": "message_room_members_profile_id_profiles_profile_id_fk",
          "tableFrom": "message_room_members",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "message_room_members_message_room_id_profile_id_pk": {
          "name": "message_room_members_message_room_id_profile_id_pk",
          "columns": [
            "message_room_id",
            "profile_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "message-room-members-select-policy": {
          "name": "message-room-members-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM message_room_members mrm \n        WHERE mrm.message_room_id = message_room_members.message_room_id \n        AND mrm.profile_id = auth.uid()::uuid \n        AND mrm.is_active = true\n      )"
        },
        "message-room-members-insert-policy": {
          "name": "message-room-members-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "profile_id = auth.uid()::uuid OR EXISTS (\n        SELECT 1 FROM message_rooms \n        WHERE message_room_id = message_room_members.message_room_id \n        AND created_by = auth.uid()::uuid\n      )"
        },
        "message-room-members-update-policy": {
          "name": "message-room-members-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid",
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "message-room-members-delete-policy": {
          "name": "message-room-members-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.message_rooms": {
      "name": "message_rooms",
      "schema": "",
      "columns": {
        "message_room_id": {
          "name": "message_room_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "message_rooms_message_room_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "room_type": {
          "name": "room_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'direct'"
        },
        "room_name": {
          "name": "room_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "message_rooms_created_by_profiles_profile_id_fk": {
          "name": "message_rooms_created_by_profiles_profile_id_fk",
          "tableFrom": "message_rooms",
          "tableTo": "profiles",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "message-rooms-select-policy": {
          "name": "message-rooms-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM message_room_members \n        WHERE message_room_id = message_rooms.message_room_id \n        AND profile_id = auth.uid()::uuid \n        AND is_active = true\n      )"
        },
        "message-rooms-insert-policy": {
          "name": "message-rooms-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "auth.uid() IS NOT NULL"
        },
        "message-rooms-update-policy": {
          "name": "message-rooms-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "created_by = auth.uid()::uuid OR EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )",
          "withCheck": "created_by = auth.uid()::uuid OR EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )"
        },
        "message-rooms-delete-policy": {
          "name": "message-rooms-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "created_by = auth.uid()::uuid OR EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.messages": {
      "name": "messages",
      "schema": "",
      "columns": {
        "message_id": {
          "name": "message_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "messages_message_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "message_room_id": {
          "name": "message_room_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "sender_id": {
          "name": "sender_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "message_type": {
          "name": "message_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'text'"
        },
        "is_edited": {
          "name": "is_edited",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_deleted": {
          "name": "is_deleted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "messages_message_room_id_message_rooms_message_room_id_fk": {
          "name": "messages_message_room_id_message_rooms_message_room_id_fk",
          "tableFrom": "messages",
          "tableTo": "message_rooms",
          "columnsFrom": [
            "message_room_id"
          ],
          "columnsTo": [
            "message_room_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "messages_sender_id_profiles_profile_id_fk": {
          "name": "messages_sender_id_profiles_profile_id_fk",
          "tableFrom": "messages",
          "tableTo": "profiles",
          "columnsFrom": [
            "sender_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "messages-select-policy": {
          "name": "messages-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM message_room_members \n        WHERE message_room_id = messages.message_room_id \n        AND profile_id = auth.uid()::uuid \n        AND is_active = true\n      )"
        },
        "messages-insert-policy": {
          "name": "messages-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "sender_id = auth.uid()::uuid AND EXISTS (\n        SELECT 1 FROM message_room_members \n        WHERE message_room_id = messages.message_room_id \n        AND profile_id = auth.uid()::uuid \n        AND is_active = true\n      )"
        },
        "messages-update-policy": {
          "name": "messages-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "sender_id = auth.uid()::uuid",
          "withCheck": "sender_id = auth.uid()::uuid"
        },
        "messages-delete-policy": {
          "name": "messages-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "sender_id = auth.uid()::uuid OR EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profile_id = auth.uid()::uuid \n        AND role = 'admin'\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.notifications": {
      "name": "notifications",
      "schema": "",
      "columns": {
        "notification_id": {
          "name": "notification_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "notifications_notification_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "source_id": {
          "name": "source_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "notification_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "reference_id": {
          "name": "reference_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "read": {
          "name": "read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "read_at": {
          "name": "read_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "notifications_source_id_profiles_profile_id_fk": {
          "name": "notifications_source_id_profiles_profile_id_fk",
          "tableFrom": "notifications",
          "tableTo": "profiles",
          "columnsFrom": [
            "source_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "notifications_target_id_profiles_profile_id_fk": {
          "name": "notifications_target_id_profiles_profile_id_fk",
          "tableFrom": "notifications",
          "tableTo": "profiles",
          "columnsFrom": [
            "target_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "notifications-select-policy": {
          "name": "notifications-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "target_id = auth.uid()::uuid"
        },
        "notifications-insert-policy": {
          "name": "notifications-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "auth.uid() IS NOT NULL"
        },
        "notifications-update-policy": {
          "name": "notifications-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "target_id = auth.uid()::uuid",
          "withCheck": "target_id = auth.uid()::uuid"
        },
        "notifications-delete-policy": {
          "name": "notifications-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "target_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "job_title": {
          "name": "job_title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "short_intro": {
          "name": "short_intro",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "work_status": {
          "name": "work_status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'available'"
        },
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "specialties": {
          "name": "specialties",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'"
        },
        "commission_status": {
          "name": "commission_status",
          "type": "commission_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'available'"
        },
        "followers_count": {
          "name": "followers_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "following_count": {
          "name": "following_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "views_count": {
          "name": "views_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_profile_id_users_id_fk": {
          "name": "profiles_profile_id_users_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profiles_username_unique": {
          "name": "profiles_username_unique",
          "nullsNotDistinct": false,
          "columns": [
            "username"
          ]
        }
      },
      "policies": {
        "profiles-select-policy": {
          "name": "profiles-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "profiles-insert-policy": {
          "name": "profiles-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "profiles-update-policy": {
          "name": "profiles-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid",
          "withCheck": "profile_id = auth.uid()::uuid"
        },
        "profiles-delete-policy": {
          "name": "profiles-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "profile_id = auth.uid()::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.category_showcase": {
      "name": "category_showcase",
      "schema": "",
      "columns": {
        "showcase_id": {
          "name": "showcase_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "storage_path": {
          "name": "storage_path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "alt_text": {
          "name": "alt_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "display_order": {
          "name": "display_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "is_active": {
          "name": "is_active",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'true'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "category-showcase-select-policy": {
          "name": "category-showcase-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "category-showcase-insert-policy": {
          "name": "category-showcase-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "category-showcase-update-policy": {
          "name": "category-showcase-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "category-showcase-delete-policy": {
          "name": "category-showcase-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.logo": {
      "name": "logo",
      "schema": "",
      "columns": {
        "logo_id": {
          "name": "logo_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "image_url": {
          "name": "image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "alt_text": {
          "name": "alt_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'true'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "logo-select-policy": {
          "name": "logo-select-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "logo-insert-policy": {
          "name": "logo-insert-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "logo-update-policy": {
          "name": "logo-update-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "logo-delete-policy": {
          "name": "logo-delete-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.commission_status": {
      "name": "commission_status",
      "schema": "public",
      "values": [
        "available",
        "pending",
        "unavailable",
        "paused"
      ]
    },
    "public.order_status": {
      "name": "order_status",
      "schema": "public",
      "values": [
        "pending",
        "accepted",
        "in_progress",
        "revision_requested",
        "completed",
        "cancelled",
        "refunded",
        "disputed"
      ]
    },
    "public.notification_type": {
      "name": "notification_type",
      "schema": "public",
      "values": [
        "follow",
        "commission_request",
        "commission_accepted",
        "commission_completed",
        "review",
        "reply",
        "mention",
        "commission_like",
        "review_like",
        "post_upvote",
        "post_reply"
      ]
    },
    "public.user_role": {
      "name": "user_role",
      "schema": "public",
      "values": [
        "user",
        "admin"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}